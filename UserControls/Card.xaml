<UserControl
    x:Class="WpfApp1.UserControls.Card"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Name="card">
    <!--
        Border 效果说明
        1.选中：Width 变大 && Background 变蓝
        2.未选中：Width 变小 && Background 变淡
    -->
    <Border
        Height="150"
        Padding="20"
        HorizontalAlignment="Stretch"
        CornerRadius="25">
        <Border.Effect>
            <DropShadowEffect
                BlurRadius="20"
                Opacity="0.5"
                ShadowDepth="1" />
        </Border.Effect>
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="Width" Value="150" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=toggle, Path=IsChecked}" Value="True">
                        <Setter Property="Background" Value="#3256F1" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ElementName=toggle, Path=IsChecked}" Value="False">
                        <Setter Property="Background" Value="#EFEFEE" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ElementName=card, Path=IsChecked}" Value="True">
                        <Setter Property="Width" Value="190" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ElementName=card, Path=IsChecked}" Value="False">
                        <Setter Property="Width" Value="150" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <!--  主面板  -->
        <Grid>
            <!--
                样式：数据绑定 CheckBox的toggle 的 IsChecked 属性
                1. 选中：文字 ON && 文字颜色 白色
                2.未选中：文字 Off && 文字颜色 蓝色
            -->
            <TextBlock
                Margin="0,5,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                FontWeight="SemiBold">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=toggle, Path=IsChecked}" Value="True">
                                <Setter Property="Text" Value="On" />
                                <Setter Property="Foreground" Value="#ffffff" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ElementName=toggle, Path=IsChecked}" Value="False">
                                <Setter Property="Text" Value="Off" />
                                <Setter Property="Foreground" Value="#3256F1" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <!--
                IsChecked 值 绑定 card 的 IsChecked
                
                样式：数据绑定 card 的 IsHorizontal 属性
                1.选中：位置 竖直 Center
                2.未选中：位置 竖直 Top
            -->
            <CheckBox
                x:Name="toggle"
                HorizontalAlignment="Right"
                IsChecked="{Binding ElementName=card, Path=IsChecked}">
                <CheckBox.Style>
                    <Style BasedOn="{StaticResource toggleButton}" TargetType="CheckBox">
                        <Setter Property="VerticalAlignment" Value="Top" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=card, Path=IsHorizontal}" Value="True">
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=card, Path=IsHorizontal}" Value="False">
                                <Setter Property="VerticalAlignment" Value="Top" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>
            <!--
                样式：绑定 toggle 的 IsCheck 属性
                1.选中：Source 使用 card.ImageOn的值
                2.未选中： Source 使用 card.ImageOff的值
            -->
            <Image HorizontalAlignment="Left">
                <Image.Style>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=toggle, Path=IsChecked}" Value="True">
                                <Setter Property="Source" Value="{Binding ElementName=card, Path=ImageOn}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=toggle, Path=IsChecked}" Value="False">
                                <Setter Property="Source" Value="{Binding ElementName=card, Path=ImageOff}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>

            <!--
                属性： Text 绑定 card.Title
                
                样式：绑定 toggle 的 IsChecked 值
                1.选中：文字背景 变白
                2.未选中 文字背景 变黑
            -->
            <TextBlock
                VerticalAlignment="Bottom"
                FontWeight="SemiBold"
                Text="{Binding ElementName=card, Path=Title}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=toggle, Path=IsChecked}" Value="True">
                                <Setter Property="Foreground" Value="#ffffff" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=toggle, Path=IsChecked}" Value="False">
                                <Setter Property="Foreground" Value="#2F2C37" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
    </Border>
</UserControl>
